// ðŸŒŸ Exercise 1: Giphy API

// URL de l'API Giphy avec les paramÃ¨tres requis
const url = "https://api.giphy.com/v1/gifs/search?q=hilarious&rating=g&api_key=hpvZycW22qCjn5cRM1xtWB8NKq4dQ2My";

// Fonction principale pour rÃ©cupÃ©rer et afficher les donnÃ©es
fetch(url)
  .then(response => {
    // VÃ©rifie si la requÃªte a rÃ©ussi
    if (!response.ok) {
      throw new Error(`Erreur HTTP : ${response.status}`);
    }
    // Convertit la rÃ©ponse en JSON
    return response.json();
  })
  .then(data => {
    // Affiche l'objet complet dans la console
    console.log("RÃ©sultat de la requÃªte Giphy :", data);
  })
  .catch(error => {
    // GÃ¨re les erreurs Ã©ventuelles
    console.error("Erreur lors de la rÃ©cupÃ©ration des donnÃ©es Giphy :", error);
  });
// ðŸŒŸ Exercise 2: Giphy API

// URL avec les bons paramÃ¨tres :
// q = "sun" â†’ recherche "sun"
// limit = 10 â†’ retourne 10 GIFs
// offset = 2 â†’ commence Ã  la position 2
// rating = "g" â†’ filtre les GIFs de niveau appropriÃ©
// api_key = clÃ© publique fournie
const url = "https://api.giphy.com/v1/gifs/search?q=sun&limit=10&offset=2&rating=g&api_key=hpvZycW22qCjn5cRM1xtWB8NKq4dQ2My";

// RequÃªte avec Fetch API
fetch(url)
  .then(response => {
    // VÃ©rifie que la rÃ©ponse est correcte
    if (!response.ok) {
      throw new Error(`Erreur HTTP : ${response.status}`);
    }
    // Convertit la rÃ©ponse en JSON
    return response.json();
  })
  .then(data => {
    // Affiche l'objet complet dans la console
    console.log("RÃ©sultat de la recherche 'sun' :", data);
  })
  .catch(error => {
    // Capture et affiche toute erreur
    console.error("Erreur lors de la rÃ©cupÃ©ration des GIFs :", error);
  });
// ðŸŒŸ Exercise 3: Async function â€” Fetch Star Wars API data without .then()

async function getStarship() {
  const url = "https://www.swapi.tech/api/starships/9/";

  try {
    // envoi de la requÃªte
    const response = await fetch(url);

    // vÃ©rification du statut de la rÃ©ponse
    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }

    // conversion du corps de la rÃ©ponse en JSON
    const data = await response.json();

    // affichage du rÃ©sultat dans la console
    console.log(data.result);

  } catch (error) {
    // gestion d'erreurs rÃ©seau ou HTTP
    console.error("Error fetching Star Wars data:", error);
  }
}

// appel de la fonction asynchrone
getStarship();




//exrcice 4
function resolveAfter2Seconds() {
    return new Promise(resolve => {
        setTimeout(() => {
            resolve('resolved');
        }, 2000);
    });
}

async function asyncCall() {
    console.log('calling');
    let result = await resolveAfter2Seconds();
    console.log(result);
}

asyncCall();
